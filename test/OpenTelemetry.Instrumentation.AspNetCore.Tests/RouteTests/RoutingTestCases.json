[
  {
    "name": "Root path",
    "testApplicationScenario": "ConventionalRouting",
    "httpMethod": "GET",
    "path": "/",
    "expectedStatusCode": 200,
    "currentHttpRoute": "{controller=ConventionalRoute}/{action=Default}/{id?}",
    "expectedHttpRoute": "ConventionalRoute/Default/{id?}"
  },
  {
    "name": "Non-default action with route parameter and query string",
    "testApplicationScenario": "ConventionalRouting",
    "httpMethod": "GET",
    "path": "/ConventionalRoute/ActionWithStringParameter/2?num=3",
    "expectedStatusCode": 200,
    "currentHttpRoute": "{controller=ConventionalRoute}/{action=Default}/{id?}",
    "expectedHttpRoute": "ConventionalRoute/ActionWithStringParameter/{id?}"
  },
  {
    "name": "Non-default action with query string",
    "testApplicationScenario": "ConventionalRouting",
    "httpMethod": "GET",
    "path": "/ConventionalRoute/ActionWithStringParameter?num=3",
    "expectedStatusCode": 200,
    "currentHttpRoute": "{controller=ConventionalRoute}/{action=Default}/{id?}",
    "expectedHttpRoute": "ConventionalRoute/ActionWithStringParameter/{id?}"
  },
  {
    "name": "Not Found (404)",
    "testApplicationScenario": "ConventionalRouting",
    "httpMethod": "GET",
    "path": "/ConventionalRoute/NotFound",
    "expectedStatusCode": 404,
    "currentHttpRoute": null,
    "expectedHttpRoute": ""
  },
  {
    "name": "Route template with parameter constraint",
    "testApplicationScenario": "ConventionalRouting",
    "httpMethod": "GET",
    "path": "/SomePath/SomeString/2",
    "expectedStatusCode": 200,
    "currentHttpRoute": null,
    "expectedHttpRoute": "SomePath/{id}/{num:int}"
  },
  {
    "name": "Path that does not match parameter constraint",
    "testApplicationScenario": "ConventionalRouting",
    "httpMethod": "GET",
    "path": "/SomePath/SomeString/NotAnInt",
    "expectedStatusCode": 404,
    "currentHttpRoute": null,
    "expectedHttpRoute": ""
  },
  {
    "name": "Area using `area:exists`, default controller/action",
    "testApplicationScenario": "ConventionalRouting",
    "httpMethod": "GET",
    "path": "/MyArea",
    "expectedStatusCode": 200,
    "currentHttpRoute": "{area:exists}/{controller=ControllerForMyArea}/{action=Default}/{id?}",
    "expectedHttpRoute": "{area:exists}/ControllerForMyArea/Default/{id?}"
  },
  {
    "name": "Area using `area:exists`, non-default action",
    "testApplicationScenario": "ConventionalRouting",
    "httpMethod": "GET",
    "path": "/MyArea/ControllerForMyArea/NonDefault",
    "expectedStatusCode": 200,
    "currentHttpRoute": "{area:exists}/{controller=ControllerForMyArea}/{action=Default}/{id?}",
    "expectedHttpRoute": "{area:exists}/ControllerForMyArea/NonDefault/{id?}"
  },
  {
    "name": "Area w/o `area:exists`, default controller/action",
    "testApplicationScenario": "ConventionalRouting",
    "httpMethod": "GET",
    "path": "/SomePrefix",
    "expectedStatusCode": 200,
    "currentHttpRoute": "SomePrefix/{controller=AnotherArea}/{action=Index}/{id?}",
    "expectedHttpRoute": "SomePrefix/AnotherArea/Index/{id?}"
  },
  {
    "name": "Default action",
    "testApplicationScenario": "AttributeRouting",
    "httpMethod": "GET",
    "path": "/AttributeRoute",
    "expectedStatusCode": 200,
    "currentHttpRoute": null,
    "expectedHttpRoute": "AttributeRoute"
  },
  {
    "name": "Action without parameter",
    "testApplicationScenario": "AttributeRouting",
    "httpMethod": "GET",
    "path": "/AttributeRoute/Get",
    "expectedStatusCode": 200,
    "currentHttpRoute": null,
    "expectedHttpRoute": "AttributeRoute/Get"
  },
  {
    "name": "Action with parameter",
    "testApplicationScenario": "AttributeRouting",
    "httpMethod": "GET",
    "path": "/AttributeRoute/Get/12",
    "expectedStatusCode": 200,
    "currentHttpRoute": null,
    "expectedHttpRoute": "AttributeRoute/Get/{id}"
  },
  {
    "name": "Action with parameter before action name in template",
    "testApplicationScenario": "AttributeRouting",
    "httpMethod": "GET",
    "path": "/AttributeRoute/12/GetWithActionNameInDifferentSpotInTemplate",
    "expectedStatusCode": 200,
    "currentHttpRoute": null,
    "expectedHttpRoute": "AttributeRoute/{id}/GetWithActionNameInDifferentSpotInTemplate"
  },
  {
    "name": "Action invoked resulting in 400 Bad Request",
    "testApplicationScenario": "AttributeRouting",
    "httpMethod": "GET",
    "path": "/AttributeRoute/NotAnInt/GetWithActionNameInDifferentSpotInTemplate",
    "expectedStatusCode": 400,
    "currentHttpRoute": null,
    "expectedHttpRoute": "AttributeRoute/{id}/GetWithActionNameInDifferentSpotInTemplate"
  },
  {
    "name": "Root path",
    "testApplicationScenario": "RazorPages",
    "httpMethod": "GET",
    "path": "/",
    "expectedStatusCode": 200,
    "currentHttpRoute": "",
    "expectedHttpRoute": "/Index"
  },
  {
    "name": "Index page",
    "testApplicationScenario": "RazorPages",
    "httpMethod": "GET",
    "path": "/Index",
    "expectedStatusCode": 200,
    "currentHttpRoute": "Index",
    "expectedHttpRoute": "/Index"
  },
  {
    "name": "Throws exception",
    "testApplicationScenario": "RazorPages",
    "httpMethod": "GET",
    "path": "/PageThatThrowsException",
    "expectedStatusCode": 500,
    "currentHttpRoute": "PageThatThrowsException",
    "expectedHttpRoute": "/PageThatThrowsException"
  },
  {
    "name": "Static content",
    "testApplicationScenario": "RazorPages",
    "httpMethod": "GET",
    "path": "/js/site.js",
    "expectedStatusCode": 200,
    "currentHttpRoute": null,
    "expectedHttpRoute": ""
  },
  {
    "name": "Action without parameter",
    "testApplicationScenario": "MinimalApi",
    "httpMethod": "GET",
    "path": "/MinimalApi",
    "expectedStatusCode": 200,
    "currentHttpRoute": null,
    "expectedHttpRoute": "/MinimalApi"
  },
  {
    "name": "Action with parameter",
    "testApplicationScenario": "MinimalApi",
    "httpMethod": "GET",
    "path": "/MinimalApi/123",
    "expectedStatusCode": 200,
    "currentHttpRoute": null,
    "expectedHttpRoute": "/MinimalApi/{id}"
  },
  {
    "name": "Action without parameter (MapGroup)",
    "minimumDotnetVersion": 7,
    "testApplicationScenario": "MinimalApi",
    "httpMethod": "GET",
    "path": "/MinimalApiUsingMapGroup",
    "expectedStatusCode": 200,
    "currentHttpRoute": null,
    "expectedHttpRoute": "/MinimalApiUsingMapGroup/"
  },
  {
    "name": "Action with parameter (MapGroup)",
    "minimumDotnetVersion": 7,
    "testApplicationScenario": "MinimalApi",
    "httpMethod": "GET",
    "path": "/MinimalApiUsingMapGroup/123",
    "expectedStatusCode": 200,
    "currentHttpRoute": null,
    "expectedHttpRoute": "/MinimalApiUsingMapGroup/{id}"
  },
  {
    "name": "Exception Handled by Exception Handler Middleware",
    "testApplicationScenario": "ExceptionMiddleware",
    "httpMethod": "GET",
    "path": "/Exception",
    "expectedStatusCode": 500,
    "currentHttpRoute": null,
    "expectedHttpRoute": "/Exception"
  }
]
