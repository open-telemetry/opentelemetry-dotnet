// <auto-generated/>

using OpenTelemetry.Trace.Configuration;
using OpenTelemetry.Exporter.Console;
using OpenTelemetry.Trace;

namespace Samples
{
    internal class TestConsole
    {
        internal static object Run(ConsoleOptions options)
        {
            // map test project settings to ConsoleExporterSetting
            var exporterOptions = new ConsoleExporterOptions
            {
                Pretty = options.Pretty
            };

            // create exporter
            var exporter = new ConsoleExporter(exporterOptions);

            // Create tracer
            using var tracerFactory = TracerFactory.Create(builder => {
                builder.AddProcessorPipeline(p => p.SetExporter(exporter));
            });
            var tracer = tracerFactory.GetTracer("console-test");

            using (tracer.StartActiveSpan("parent", out var parent))
            {
                tracer.CurrentSpan.SetAttribute("key", 123);
                tracer.CurrentSpan.AddEvent("test-event");

                using (tracer.StartActiveSpan("child", out var child))
                {
                    child.SetAttribute("key", "value");
                }
            }

            return null;
        }
    }
}
