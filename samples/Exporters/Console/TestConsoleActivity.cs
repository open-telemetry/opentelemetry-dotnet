// <auto-generated/>

using OpenTelemetry.Trace.Configuration;
using OpenTelemetry.Exporter.Console;
using OpenTelemetry.Trace;
using System.Diagnostics;
using OpenTelemetry.Trace.Export;

namespace Samples
{
    internal class TestConsoleActvity
    {
        internal static object Run(ConsoleActivityOptions options)
        {
            // Setup exporter
            var exporterOptions = new ConsoleExporterOptions
            {
                Pretty = options.Pretty
            };
            var activityExporter = new ConsoleActivityExporter(exporterOptions);

            // Setup processor
            var activityProcessor = new SimpleActivityProcessor(activityExporter);

            // Enable OpenTelemetry for the "source" named "DemoSource".
            OpenTelemetrySDK.EnableOpenTelemetry("DemoSource", activityProcessor);

            // Everything above this line is required only in Applications
            // which decide to use OT.

            // The following is generating activity.
            // A library would simply write the following line of code.
            var source = new ActivitySource("DemoSource");
            using (var parent = source.StartActivity("parent"))
            {
                parent?.AddTag("parent location", "parent location");

                using (var child = source.StartActivity("child"))
                {
                    child?.AddTag("child location", "child location");
                }
            }

            return null;
        }
    }
}
