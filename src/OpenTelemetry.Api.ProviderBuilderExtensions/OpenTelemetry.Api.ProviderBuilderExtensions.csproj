<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- OmniSharp/VS Code requires TargetFrameworks to be in descending order for IntelliSense and analysis. -->
    <TargetFrameworks>net6.0;netstandard2.0;net462</TargetFrameworks>
    <Description>Contains extensions to register OpenTelemetry in applications using Microsoft.Extensions.DependencyInjection</Description>
    <RootNamespace>OpenTelemetry</RootNamespace>
    <MinVerTagPrefix>core-</MinVerTagPrefix>
    <AnalysisLevel>latest-all</AnalysisLevel>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="$(RepoRoot)\src\OpenTelemetry.Api\OpenTelemetry.Api.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="$(RepoRoot)\src\OpenTelemetry.Api\Internal\Shims\DynamicallyAccessedMembersAttribute.cs" Link="Includes\DynamicallyAccessedMembersAttribute.cs" />
    <Compile Include="$(RepoRoot)\src\OpenTelemetry.Api\Internal\Shims\DynamicallyAccessedMemberTypes.cs" Link="Includes\DynamicallyAccessedMemberTypes.cs" />
  </ItemGroup>

  <!--
  v1.4.0 doesn't contain a net6.0 target, so we can't run ApiCompat against it.
  Instead, run net6.0's ApiCompat check against netstandard2.0.
  Remove this once 1.5.0 is released.
  -->
  <ItemGroup Condition="'$(CheckAPICompatibility)' == 'true' and '$(TargetFramework)' == 'net6.0'">
    <ResolvedMatchingContract Remove="$(RepoRoot)\build\LastMajorVersionBinaries\$(AssemblyName)\$(OTelPreviousStableVer)\lib\$(TargetFramework)\$(AssemblyName).dll" />
    <ResolvedMatchingContract Include="$(RepoRoot)\build\LastMajorVersionBinaries\$(AssemblyName)\$(OTelPreviousStableVer)\lib\netstandard2.0\$(AssemblyName).dll" />
  </ItemGroup>
</Project>
