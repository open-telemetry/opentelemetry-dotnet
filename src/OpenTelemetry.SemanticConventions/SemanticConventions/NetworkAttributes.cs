// <copyright file="NetworkAttributes.cs" company="OpenTelemetry Authors">
// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>

// <auto-generated> This file has been auto generated from buildscripts/semantic-conventions/templates/Attributes.cs.j2</auto-generated>

using System;

namespace OpenTelemetry.SemanticConventions
{
    /// <summary>
    /// Describes semantic conventions for attributes in the <c>network</c> namespace.
    /// </summary>
    public static class NetworkAttributes
    {
        /// <summary>
        /// Local address of the network connection - IP address or Unix domain socket name.
        /// </summary>
        public const string NetworkLocalAddress = "network.local.address";

        /// <summary>
        /// Local port number of the network connection.
        /// </summary>
        public const string NetworkLocalPort = "network.local.port";

        /// <summary>
        /// Peer address of the network connection - IP address or Unix domain socket name.
        /// </summary>
        public const string NetworkPeerAddress = "network.peer.address";

        /// <summary>
        /// Peer port number of the network connection.
        /// </summary>
        public const string NetworkPeerPort = "network.peer.port";

        /// <summary>
        /// <a href="https://osi-model.com/application-layer/">OSI application layer</a> or non-OSI equivalent.
        /// </summary>
        /// <remarks>
        /// The value SHOULD be normalized to lowercase.
        /// </remarks>
        public const string NetworkProtocolName = "network.protocol.name";

        /// <summary>
        /// Version of the protocol specified in <c>network.protocol.name</c>.
        /// </summary>
        /// <remarks>
        /// <c>network.protocol.version</c> refers to the version of the protocol used and might be different from the protocol client&amp;#39;s version. If the HTTP client has a version of <c>0.27.2</c>, but sends HTTP version <c>1.1</c>, this attribute should be set to <c>1.1</c>.
        /// </remarks>
        public const string NetworkProtocolVersion = "network.protocol.version";

        /// <summary>
        /// <a href="https://osi-model.com/transport-layer/">OSI transport layer</a> or <a href="https://wikipedia.org/wiki/Inter-process_communication">inter-process communication method</a>.
        /// </summary>
        /// <remarks>
        /// The value SHOULD be normalized to lowercase.Consider always setting the transport when setting a port number, since
        /// a port number is ambiguous without knowing the transport. For example
        /// different processes could be listening on TCP port 12345 and UDP port 12345.
        /// </remarks>
        public const string NetworkTransport = "network.transport";

        /// <summary>
        /// <a href="https://osi-model.com/network-layer/">OSI network layer</a> or non-OSI equivalent.
        /// </summary>
        /// <remarks>
        /// The value SHOULD be normalized to lowercase.
        /// </remarks>
        public const string NetworkType = "network.type";

        /// <summary>
        /// <a href="https://osi-model.com/transport-layer/">OSI transport layer</a> or <a href="https://wikipedia.org/wiki/Inter-process_communication">inter-process communication method</a>.
        /// </summary>
        public static class NetworkTransportValues
        {
            /// <summary>
            /// TCP.
            /// </summary>
            public const string Tcp = "tcp";
            /// <summary>
            /// UDP.
            /// </summary>
            public const string Udp = "udp";
            /// <summary>
            /// Named or anonymous pipe.
            /// </summary>
            public const string Pipe = "pipe";
            /// <summary>
            /// Unix domain socket.
            /// </summary>
            public const string Unix = "unix";
        }

        /// <summary>
        /// <a href="https://osi-model.com/network-layer/">OSI network layer</a> or non-OSI equivalent.
        /// </summary>
        public static class NetworkTypeValues
        {
            /// <summary>
            /// IPv4.
            /// </summary>
            public const string Ipv4 = "ipv4";
            /// <summary>
            /// IPv6.
            /// </summary>
            public const string Ipv6 = "ipv6";
        }
    }
}