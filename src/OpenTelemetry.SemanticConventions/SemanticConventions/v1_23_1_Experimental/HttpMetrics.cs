// <copyright file="HttpMetrics.cs" company="OpenTelemetry Authors">
// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>

// <auto-generated> This file has been auto generated from buildscripts/semantic-conventions/templates/Metrics.cs.j2</auto-generated>

using System.Diagnostics.Metrics;

namespace OpenTelemetry.SemanticConventions.v1_23_1_Experimental
{
  /// <summary>
  /// Describes semantic conventions for metrics in the <c>http</c> namespace.
  /// </summary>
  public static class HttpMetrics {
      /// <summary>
      /// Creates <c>http.client.request.body.size</c> instrument.
      /// Size of HTTP client request bodies.
      /// </summary>
      /// <remarks>
      /// The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the <a href="https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length">Content-Length</a> header. For requests using transport encoding, this should be the compressed size.
      /// </remarks>
      public static Histogram<double> CreateHttpClientRequestBodySize(Meter meter)
      {
          return meter.CreateHistogram<double>("http.client.request.body.size", "By", "Size of HTTP client request bodies.");
      }

      /// <summary>
      /// Creates <c>http.client.request.duration</c> instrument.
      /// Duration of HTTP client requests.
      /// </summary>
      public static Histogram<double> CreateHttpClientRequestDuration(Meter meter)
      {
          return meter.CreateHistogram<double>("http.client.request.duration", "s", "Duration of HTTP client requests.");
      }

      /// <summary>
      /// Creates <c>http.client.response.body.size</c> instrument.
      /// Size of HTTP client response bodies.
      /// </summary>
      /// <remarks>
      /// The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the <a href="https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length">Content-Length</a> header. For requests using transport encoding, this should be the compressed size.
      /// </remarks>
      public static Histogram<double> CreateHttpClientResponseBodySize(Meter meter)
      {
          return meter.CreateHistogram<double>("http.client.response.body.size", "By", "Size of HTTP client response bodies.");
      }

      /// <summary>
      /// Creates <c>http.server.active_requests</c> instrument.
      /// Number of active HTTP server requests.
      /// </summary>
      public static UpDownCounter<long> CreateHttpServerActiveRequests(Meter meter)
      {
          return meter.CreateUpDownCounter<long>("http.server.active_requests", "{request}", "Number of active HTTP server requests.");
      }

      /// <summary>
      /// Creates <c>http.server.request.body.size</c> instrument.
      /// Size of HTTP server request bodies.
      /// </summary>
      /// <remarks>
      /// The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the <a href="https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length">Content-Length</a> header. For requests using transport encoding, this should be the compressed size.
      /// </remarks>
      public static Histogram<double> CreateHttpServerRequestBodySize(Meter meter)
      {
          return meter.CreateHistogram<double>("http.server.request.body.size", "By", "Size of HTTP server request bodies.");
      }

      /// <summary>
      /// Creates <c>http.server.request.duration</c> instrument.
      /// Duration of HTTP server requests.
      /// </summary>
      public static Histogram<double> CreateHttpServerRequestDuration(Meter meter)
      {
          return meter.CreateHistogram<double>("http.server.request.duration", "s", "Duration of HTTP server requests.");
      }

      /// <summary>
      /// Creates <c>http.server.response.body.size</c> instrument.
      /// Size of HTTP server response bodies.
      /// </summary>
      /// <remarks>
      /// The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the <a href="https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length">Content-Length</a> header. For requests using transport encoding, this should be the compressed size.
      /// </remarks>
      public static Histogram<double> CreateHttpServerResponseBodySize(Meter meter)
      {
          return meter.CreateHistogram<double>("http.server.response.body.size", "By", "Size of HTTP server response bodies.");
      }
  }
}
