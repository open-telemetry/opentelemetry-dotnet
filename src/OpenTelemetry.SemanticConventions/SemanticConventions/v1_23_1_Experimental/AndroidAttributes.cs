// <copyright file="AndroidAttributes.cs" company="OpenTelemetry Authors">
// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>

// <auto-generated> This file has been auto generated from buildscripts/semantic-conventions/templates/Attributes.cs.j2</auto-generated>

using System;

namespace OpenTelemetry.SemanticConventions.v1_23_1_Experimental
{
    /// <summary>
    /// Describes semantic conventions for attributes in the <c>android</c> namespace.
    /// </summary>
    public static class AndroidAttributes
    {
        /// <summary>
        /// Uniquely identifies the framework API revision offered by a version (<c>os.version</c>) of the android operating system. More information can be found <a href="https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels">here</a>.
        /// </summary>
        public const string AndroidOsApiLevel = "android.os.api_level";

        /// <summary>
        /// This attribute represents the state the application has transitioned into at the occurrence of the event.
        /// </summary>
        /// <remarks>
        /// The Android lifecycle states are defined in <a href="https://developer.android.com/guide/components/activities/activity-lifecycle#lc">Activity lifecycle callbacks</a>, and from which the <c>OS identifiers</c> are derived.
        /// </remarks>
        public const string AndroidState = "android.state";

        /// <summary>
        /// This attribute represents the state the application has transitioned into at the occurrence of the event.
        /// </summary>
        public static class AndroidStateValues
        {
            /// <summary>
            /// Any time before Activity.onResume() or, if the app has no Activity, Context.startService() has been called in the app for the first time.
            /// </summary>
            public const string Created = "created";
            /// <summary>
            /// Any time after Activity.onPause() or, if the app has no Activity, Context.stopService() has been called when the app was in the foreground state.
            /// </summary>
            public const string Background = "background";
            /// <summary>
            /// Any time after Activity.onResume() or, if the app has no Activity, Context.startService() has been called when the app was in either the created or background states.
            /// </summary>
            public const string Foreground = "foreground";
        }
    }
}