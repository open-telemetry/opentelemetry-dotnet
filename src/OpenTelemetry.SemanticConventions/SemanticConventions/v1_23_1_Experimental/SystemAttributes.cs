// <copyright file="SystemAttributes.cs" company="OpenTelemetry Authors">
// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>

// <auto-generated> This file has been auto generated from buildscripts/semantic-conventions/templates/Attributes.cs.j2</auto-generated>

using System;

namespace OpenTelemetry.SemanticConventions.v1_23_1_Experimental
{
    /// <summary>
    /// Describes semantic conventions for attributes in the <c>system</c> namespace.
    /// </summary>
    public static class SystemAttributes
    {
        /// <summary>
        /// The logical CPU number [0..n-1].
        /// </summary>
        public const string SystemCpuLogicalNumber = "system.cpu.logical_number";

        /// <summary>
        /// The state of the CPU.
        /// </summary>
        public const string SystemCpuState = "system.cpu.state";

        /// <summary>
        /// The device identifier.
        /// </summary>
        public const string SystemDevice = "system.device";

        /// <summary>
        /// The disk operation direction.
        /// </summary>
        public const string SystemDiskDirection = "system.disk.direction";

        /// <summary>
        /// The filesystem mode.
        /// </summary>
        public const string SystemFilesystemMode = "system.filesystem.mode";

        /// <summary>
        /// The filesystem mount path.
        /// </summary>
        public const string SystemFilesystemMountpoint = "system.filesystem.mountpoint";

        /// <summary>
        /// The filesystem state.
        /// </summary>
        public const string SystemFilesystemState = "system.filesystem.state";

        /// <summary>
        /// The filesystem type.
        /// </summary>
        public const string SystemFilesystemType = "system.filesystem.type";

        /// <summary>
        /// The memory state.
        /// </summary>
        public const string SystemMemoryState = "system.memory.state";

        /// <summary>
        /// .
        /// </summary>
        public const string SystemNetworkDirection = "system.network.direction";

        /// <summary>
        /// A stateless protocol MUST NOT set this attribute.
        /// </summary>
        public const string SystemNetworkState = "system.network.state";

        /// <summary>
        /// The paging access direction.
        /// </summary>
        public const string SystemPagingDirection = "system.paging.direction";

        /// <summary>
        /// The memory paging state.
        /// </summary>
        public const string SystemPagingState = "system.paging.state";

        /// <summary>
        /// The memory paging type.
        /// </summary>
        public const string SystemPagingType = "system.paging.type";

        /// <summary>
        /// The process state, e.g., <a href="https://man7.org/linux/man-pages/man1/ps.1.html#PROCESS_STATE_CODES">Linux Process State Codes</a>.
        /// </summary>
        public const string SystemProcessesStatus = "system.processes.status";

        /// <summary>
        /// The state of the CPU.
        /// </summary>
        public static class SystemCpuStateValues
        {
            /// <summary>
            /// user.
            /// </summary>
            public const string User = "user";
            /// <summary>
            /// system.
            /// </summary>
            public const string System = "system";
            /// <summary>
            /// nice.
            /// </summary>
            public const string Nice = "nice";
            /// <summary>
            /// idle.
            /// </summary>
            public const string Idle = "idle";
            /// <summary>
            /// iowait.
            /// </summary>
            public const string Iowait = "iowait";
            /// <summary>
            /// interrupt.
            /// </summary>
            public const string Interrupt = "interrupt";
            /// <summary>
            /// steal.
            /// </summary>
            public const string Steal = "steal";
        }

        /// <summary>
        /// The disk operation direction.
        /// </summary>
        public static class SystemDiskDirectionValues
        {
            /// <summary>
            /// read.
            /// </summary>
            public const string Read = "read";
            /// <summary>
            /// write.
            /// </summary>
            public const string Write = "write";
        }

        /// <summary>
        /// The filesystem state.
        /// </summary>
        public static class SystemFilesystemStateValues
        {
            /// <summary>
            /// used.
            /// </summary>
            public const string Used = "used";
            /// <summary>
            /// free.
            /// </summary>
            public const string Free = "free";
            /// <summary>
            /// reserved.
            /// </summary>
            public const string Reserved = "reserved";
        }

        /// <summary>
        /// The filesystem type.
        /// </summary>
        public static class SystemFilesystemTypeValues
        {
            /// <summary>
            /// fat32.
            /// </summary>
            public const string Fat32 = "fat32";
            /// <summary>
            /// exfat.
            /// </summary>
            public const string Exfat = "exfat";
            /// <summary>
            /// ntfs.
            /// </summary>
            public const string Ntfs = "ntfs";
            /// <summary>
            /// refs.
            /// </summary>
            public const string Refs = "refs";
            /// <summary>
            /// hfsplus.
            /// </summary>
            public const string Hfsplus = "hfsplus";
            /// <summary>
            /// ext4.
            /// </summary>
            public const string Ext4 = "ext4";
        }

        /// <summary>
        /// The memory state.
        /// </summary>
        public static class SystemMemoryStateValues
        {
            /// <summary>
            /// used.
            /// </summary>
            public const string Used = "used";
            /// <summary>
            /// free.
            /// </summary>
            public const string Free = "free";
            /// <summary>
            /// shared.
            /// </summary>
            public const string Shared = "shared";
            /// <summary>
            /// buffers.
            /// </summary>
            public const string Buffers = "buffers";
            /// <summary>
            /// cached.
            /// </summary>
            public const string Cached = "cached";
        }

        /// <summary>
        /// .
        /// </summary>
        public static class SystemNetworkDirectionValues
        {
            /// <summary>
            /// transmit.
            /// </summary>
            public const string Transmit = "transmit";
            /// <summary>
            /// receive.
            /// </summary>
            public const string Receive = "receive";
        }

        /// <summary>
        /// A stateless protocol MUST NOT set this attribute.
        /// </summary>
        public static class SystemNetworkStateValues
        {
            /// <summary>
            /// close.
            /// </summary>
            public const string Close = "close";
            /// <summary>
            /// close_wait.
            /// </summary>
            public const string CloseWait = "close_wait";
            /// <summary>
            /// closing.
            /// </summary>
            public const string Closing = "closing";
            /// <summary>
            /// delete.
            /// </summary>
            public const string Delete = "delete";
            /// <summary>
            /// established.
            /// </summary>
            public const string Established = "established";
            /// <summary>
            /// fin_wait_1.
            /// </summary>
            public const string FinWait1 = "fin_wait_1";
            /// <summary>
            /// fin_wait_2.
            /// </summary>
            public const string FinWait2 = "fin_wait_2";
            /// <summary>
            /// last_ack.
            /// </summary>
            public const string LastAck = "last_ack";
            /// <summary>
            /// listen.
            /// </summary>
            public const string Listen = "listen";
            /// <summary>
            /// syn_recv.
            /// </summary>
            public const string SynRecv = "syn_recv";
            /// <summary>
            /// syn_sent.
            /// </summary>
            public const string SynSent = "syn_sent";
            /// <summary>
            /// time_wait.
            /// </summary>
            public const string TimeWait = "time_wait";
        }

        /// <summary>
        /// The paging access direction.
        /// </summary>
        public static class SystemPagingDirectionValues
        {
            /// <summary>
            /// in.
            /// </summary>
            public const string In = "in";
            /// <summary>
            /// out.
            /// </summary>
            public const string Out = "out";
        }

        /// <summary>
        /// The memory paging state.
        /// </summary>
        public static class SystemPagingStateValues
        {
            /// <summary>
            /// used.
            /// </summary>
            public const string Used = "used";
            /// <summary>
            /// free.
            /// </summary>
            public const string Free = "free";
        }

        /// <summary>
        /// The memory paging type.
        /// </summary>
        public static class SystemPagingTypeValues
        {
            /// <summary>
            /// major.
            /// </summary>
            public const string Major = "major";
            /// <summary>
            /// minor.
            /// </summary>
            public const string Minor = "minor";
        }

        /// <summary>
        /// The process state, e.g., <a href="https://man7.org/linux/man-pages/man1/ps.1.html#PROCESS_STATE_CODES">Linux Process State Codes</a>.
        /// </summary>
        public static class SystemProcessesStatusValues
        {
            /// <summary>
            /// running.
            /// </summary>
            public const string Running = "running";
            /// <summary>
            /// sleeping.
            /// </summary>
            public const string Sleeping = "sleeping";
            /// <summary>
            /// stopped.
            /// </summary>
            public const string Stopped = "stopped";
            /// <summary>
            /// defunct.
            /// </summary>
            public const string Defunct = "defunct";
        }
    }
}