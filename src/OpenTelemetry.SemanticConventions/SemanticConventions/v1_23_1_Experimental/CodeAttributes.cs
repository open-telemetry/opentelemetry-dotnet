// <copyright file="CodeAttributes.cs" company="OpenTelemetry Authors">
// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>

// <auto-generated> This file has been auto generated from buildscripts/semantic-conventions/templates/Attributes.cs.j2</auto-generated>

using System;

namespace OpenTelemetry.SemanticConventions.v1_23_1_Experimental
{
    /// <summary>
    /// Describes semantic conventions for attributes in the <c>code</c> namespace.
    /// </summary>
    public static class CodeAttributes
    {
        /// <summary>
        /// The column number in <c>code.filepath</c> best representing the operation. It SHOULD point within the code unit named in <c>code.function</c>.
        /// </summary>
        public const string CodeColumn = "code.column";

        /// <summary>
        /// The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).
        /// </summary>
        public const string CodeFilepath = "code.filepath";

        /// <summary>
        /// The method or function name, or equivalent (usually rightmost part of the code unit's name).
        /// </summary>
        public const string CodeFunction = "code.function";

        /// <summary>
        /// The line number in <c>code.filepath</c> best representing the operation. It SHOULD point within the code unit named in <c>code.function</c>.
        /// </summary>
        public const string CodeLineno = "code.lineno";

        /// <summary>
        /// The &quot;namespace&quot; within which <c>code.function</c> is defined. Usually the qualified class or module name, such that <c>code.namespace</c> + some separator + <c>code.function</c> form a unique identifier for the code unit.
        /// </summary>
        public const string CodeNamespace = "code.namespace";
    }
}