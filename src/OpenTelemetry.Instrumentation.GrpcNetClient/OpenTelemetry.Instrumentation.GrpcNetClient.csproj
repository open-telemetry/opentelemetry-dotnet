<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!-- OmniSharp/VS Code requires TargetFrameworks to be in descending order for IntelliSense and analysis. -->
    <TargetFrameworks>$(TargetFrameworksForGrpcNetClientInstrumentation)</TargetFrameworks>
    <Description>gRPC for .NET client instrumentation for OpenTelemetry .NET</Description>
    <PackageTags>$(PackageTags);distributed-tracing</PackageTags>
    <MinVerTagPrefix>Instrumentation.GrpcNetClient-</MinVerTagPrefix>
    <IncludeDiagnosticSourceInstrumentationHelpers>true</IncludeDiagnosticSourceInstrumentationHelpers>

    <!-- this is temporary. will remove in future PR. -->
    <Nullable>disable</Nullable>
  </PropertyGroup>

  <!--Do not run Package Baseline Validation as this package has never released a stable version.
  Remove this property once we have released a stable version.-->
  <PropertyGroup>
    <DisablePackageBaselineValidation>true</DisablePackageBaselineValidation>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="$(RepoRoot)\src\Shared\Guard.cs" Link="Includes\Guard.cs" />
    <Compile Include="$(RepoRoot)\src\Shared\AssemblyVersionExtensions.cs" Link="Includes\AssemblyVersionExtensions.cs" />
    <Compile Include="$(RepoRoot)\src\Shared\Options\*.cs" Link="Includes\Options\%(Filename).cs" />
    <Compile Include="$(RepoRoot)\src\Shared\Shims\NullableAttributes.cs" Link="Includes\Shims\NullableAttributes.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(RunningDotNetPack)' != 'true'">
    <ProjectReference Include="$(RepoRoot)\src\OpenTelemetry\OpenTelemetry.csproj" />
  </ItemGroup>

  <!-- Instrumentation packages when published should take a dependency only on the latest stable version of the API/SDK. -->
  <ItemGroup Condition="'$(RunningDotNetPack)' == 'true'">
    <PackageReference Include="OpenTelemetry" />
  </ItemGroup>

</Project>
